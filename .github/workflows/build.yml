name: Build cross platform

permissions:
  contents: write

# Controls when the action will run. Triggers the workflow on push
on: 
  push:
  pull_request:
  release:
    # tags:
    # - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config: 
        - {
            name: "Windows Latest MSVC",
            os: windows-latest,
            artifact: win-x64,
          }
        - {
            name: "Ubuntu_Latest_GCC",
            os: ubuntu-latest,
            artifact: linux-x64,
          }
        - {
            name: "macOS Latest Clang",
            os: macos-latest,
            artifact: mac-arm64,
          }

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - name: Install dependencies on windows
        if: startsWith(matrix.config.os, 'windows')
        run: |
          choco install node cmake
          node --version
          cmake --version
          "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat"

      - name: Add msbuild to PATH
        if: startsWith(matrix.config.os, 'windows')
        uses: microsoft/setup-msbuild@v2

      - name: Install dependencies on ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu_Latest_GCC')
        run: |
          sudo apt-get update
          sudo apt-get install cmake libxi-dev libxrandr-dev libxinerama-dev libxcursor-dev mesa-common-dev libx11-xcb-dev pkg-config
          cmake --version
          gcc --version

      - name: Install dependencies on macos
        if: startsWith(matrix.config.os, 'macos')
        run: |
          brew install cmake
          cmake --version
          
      - name: Build
        shell: bash
        run: |
          npm ci
          npm run build

      - name: Upload Artifact ⬆️
        uses: actions/upload-artifact@v4
        with:
          path: ./dist/tintd*.vsix
          name: tintd-${{ matrix.config.artifact }}.vsix
          overwrite: true

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/tintd*.vsix

